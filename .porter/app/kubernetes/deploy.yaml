data:
  AzureWebJobsStorage: ''
  FUNCTIONS_WORKER_RUNTIME: amF2YQ==
apiVersion: v1
kind: Secret
metadata:
  name: java-azure-function
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: java-azure-function-http
  namespace: default
spec:
  selector:
    app: java-azure-function-http
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-azure-function-http
  namespace: default
  labels:
    app: java-azure-function-http
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-azure-function-http
  template:
    metadata:
      labels:
        app: java-azure-function-http
    spec:
      containers:
      - name: java-azure-function-http
        image: <<<image_name>>>
        ports:
        - containerPort: 80
        env:
        - name: AzureFunctionsJobHost__functions__0
          value: HttpTrigger
        envFrom:
        - secretRef:
            name: java-azure-function
---
apiVersion: keda.k8s.io/v1alpha1
kind: ScaledObject
metadata:
  name: azure-function-scaledobject
  namespace: default
  labels:
    deploymentName: java-azure-function-http
spec:
  scaleTargetRef:
    deploymentName: java-azure-function-http
  pollingInterval: 3  # Optional. Default: 30 seconds
  cooldownPeriod:  5 # Optional. Default: 300 seconds
  minReplicaCount: 1   # Optional. Default: 0
  maxReplicaCount: 100 # Optional. Default: 100
  triggers:
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-server.ingress-nginx.svc.cluster.local:9090
      metricName: nginx_ingress_controller_requests
      threshold: '1'
      query: sum(rate(nginx_ingress_controller_requests{service="java-azure-function-http"}[5s]))
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: azure-function-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
  - hosts:
    - <<<host>>>
    secretName: function-tls
  rules:
  - host: <<<host>>>
    http:
      paths:
      - backend:
          serviceName: java-azure-function-http
          servicePort: 80